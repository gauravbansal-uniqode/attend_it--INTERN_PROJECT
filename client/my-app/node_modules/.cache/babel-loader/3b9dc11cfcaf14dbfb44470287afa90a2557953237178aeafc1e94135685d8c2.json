{"ast":null,"code":"var _jsxFileName = \"/Users/gauravbansal/Desktop/attendance-project/client/my-app/src/pages/Form.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // this should contain the room id for which these responses must be set\n  const [name, setName] = useSta;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row justify-content-center align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          class: \"row col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"exampleName\",\n              children: \"Add your Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: name,\n              className: \"form-control\",\n              id: \"exampleName\",\n              placeholder: \"Enter Name\",\n              onChange: e => {\n                setName(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group pt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"exampleInputEmail1\",\n              children: \"Add your Roll No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: rollno,\n              className: \"form-control\",\n              id: \"exampleInputEmail1\",\n              \"aria-describedby\": \"emailHelp\",\n              placeholder: \"Enter Roll No\",\n              onChange: e => {\n                setEmail(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group pt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn\",\n              style: {\n                backgroundColor: \"darkorange\",\n                color: \"white\",\n                fontWeight: \"600\"\n              },\n              onClick: onSubmitHandler,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Form, \"r5uZNI/QgQLJ6YUN+rmQ/OIgZ/k=\", false, function () {\n  return [useParams];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","id","name","setName","useSta","children","class","className","for","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","rollno","setEmail","style","backgroundColor","color","fontWeight","onClick","onSubmitHandler","_c","$RefreshReg$"],"sources":["/Users/gauravbansal/Desktop/attendance-project/client/my-app/src/pages/Form.js"],"sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom'\n\nconst Form = () => {\n  const {id}= useParams();  // this should contain the room id for which these responses must be set\n  const [name, setName]= useSta\n  return (\n    <>\n        \n    <div class=\"container\">\n    <div class=\"row justify-content-center align-items-center\">\n      <form class=\"row col-12\"> \n    <div className=\"form-group\">\n      <label for=\"exampleName\">Add your Name</label>\n      <input type=\"text\" value= {name} className=\"form-control\" id=\"exampleName\" placeholder=\"Enter Name\"  \n      onChange={(e)=>{setName(e.target.value)}}\n      />\n    </div>\n    <div className=\"form-group pt-3\">\n      <label for=\"exampleInputEmail1\">Add your Roll No</label>\n      <input type=\"text\" value={rollno} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter Roll No\"  \n      onChange={(e)=>{setEmail(e.target.value)}}\n      />\n    </div>\n    <div class=\"form-group pt-3\">\n    <button type=\"submit\" className=\"btn\" style={{backgroundColor: \"darkorange\", color:\"white\", fontWeight:\"600\"}} onClick={onSubmitHandler}>Submit</button>\n    </div>\n    </form>\n    </div>\n    </div>\n   \n    </>\n\n    \n\n  )\n}\n\nexport default Form"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}